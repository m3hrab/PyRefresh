Here are 15 advanced real-world exercises to practice Python lists, tuples, and sets. These exercises are designed without indicating which data structure to use, so you can decide based on the problem.

### Exercise 1: **Student Grades Tracker**
You are given a list of student names and their respective grades in different subjects. Write a program to:
- Calculate the average grade for each student.
- Find students with the highest and lowest averages.

**Data Example:**
```python
students_grades = [
    ('Alice', [85, 90, 78]),
    ('Bob', [90, 92, 85]),
    ('Charlie', [88, 85, 91])
]
```

---

### Exercise 2: **Unique Voters List**
You are managing a voting system where each user casts a vote using their ID. Given a list of voter IDs, remove duplicate votes and return the unique voter IDs.

**Data Example:**
```python
voter_ids = [123, 456, 123, 789, 456, 101, 102, 789]
```

---

### Exercise 3: **Shopping Cart System**
You are building a shopping cart system for an e-commerce website. Write a function that:
- Accepts a list of item names and their prices.
- Outputs the total cost, and ensures no item appears more than once.

**Data Example:**
```python
cart_items = [
    ('Laptop', 999.99),
    ('Mouse', 19.99),
    ('Keyboard', 49.99),
    ('Laptop', 999.99)
]
```

---

### Exercise 4: **Customer Preferences**
You are given two sets of customer preferences for products A and B. Find:
- Customers who prefer only product A.
- Customers who prefer both products.
- Customers who prefer neither.

**Data Example:**
```python
product_a_customers = {'Alice', 'Bob', 'Charlie', 'David'}
product_b_customers = {'Charlie', 'David', 'Eve', 'Frank'}
```

---

### Exercise 5: **Sensor Data Collection**
You are working with data collected from temperature sensors over a week. Each sensor records the temperature once a day. Write a function to:
- Find the highest and lowest temperature recorded.
- Find the average temperature for the week.

**Data Example:**
```python
sensor_data = [
    (72, 68, 70, 71, 69, 74, 73),  # Sensor 1
    (67, 65, 69, 72, 66, 70, 68),  # Sensor 2
]
```

---

### Exercise 6: **Frequent Words in a Text**
You are given a string of text. Write a program to find the most frequently occurring words (ignore case and punctuation) and display the top 3.

**Data Example:**
```python
text = "Python is great, and learning python is fun. Python Python Python!"
```

---

### Exercise 7: **Popular Tourist Attractions**
You are given a list of tourists visiting various attractions, where each tourist has visited multiple places. Write a program to:
- Count the total number of unique attractions visited.
- Find the top 3 most visited attractions.

**Data Example:**
```python
tourists_data = [
    ('Tourist1', ['Eiffel Tower', 'Louvre Museum', 'Notre-Dame']),
    ('Tourist2', ['Eiffel Tower', 'Colosseum', 'Louvre Museum']),
    ('Tourist3', ['Eiffel Tower', 'Colosseum', 'Great Wall'])
]
```

---

### Exercise 8: **Movie Ratings**
You are given a list of movies and the ratings given by multiple users. Write a function that:
- Finds the movie with the highest average rating.
- Identifies movies rated by all users.

**Data Example:**
```python
movies_ratings = {
    'Inception': [5, 4, 4, 5],
    'The Matrix': [5, 5, 5, 4],
    'Interstellar': [4, 4, 4]
}
```

---

### Exercise 9: **Employee Departments**
You are given a list of employees and their assigned departments. Write a program to:
- Identify employees who are in multiple departments.
- Find departments with the least number of employees.

**Data Example:**
```python
employee_data = [
    ('Alice', 'HR'),
    ('Bob', 'Engineering'),
    ('Charlie', 'Engineering'),
    ('David', 'HR'),
    ('Eve', 'Sales'),
    ('Charlie', 'Sales')
]
```

---

### Exercise 10: **Warehouse Inventory**
You are managing a warehouse inventory system, where items are stored in different locations. Each item has a unique code and multiple locations. Write a program to:
- List all unique item codes.
- Determine which items are stored in multiple locations.

**Data Example:**
```python
inventory_data = [
    ('Item001', ['LocationA', 'LocationB']),
    ('Item002', ['LocationA']),
    ('Item003', ['LocationB', 'LocationC']),
    ('Item001', ['LocationC'])
]
```

---

### Exercise 11: **Email Spam Detection**
You have a list of email addresses. Some email addresses are duplicated, and you want to clean the data by removing the duplicates. Additionally, count how many unique email addresses are present.

**Data Example:**
```python
email_list = [
    'user1@example.com', 'user2@example.com', 'user1@example.com', 
    'user3@example.com', 'user2@example.com'
]
```

---

### Exercise 12: **Employee Salary Management**
Given a list of employee salaries, write a program to:
- Sort the employees by their salary in descending order.
- Find the employee with the second-highest salary.

**Data Example:**
```python
employee_salaries = [
    ('Alice', 70000),
    ('Bob', 80000),
    ('Charlie', 75000),
    ('David', 90000)
]
```

---

### Exercise 13: **Conference Room Scheduling**
You are managing room bookings for a conference, and each room can only be booked once for a specific time. Write a program to:
- Identify which rooms have overlapping bookings.
- List all available time slots.

**Data Example:**
```python
room_bookings = [
    ('Room1', '9:00-10:00'),
    ('Room2', '10:00-11:00'),
    ('Room1', '9:30-10:30'),
    ('Room3', '11:00-12:00')
]
```

---

### Exercise 14: **Library Book System**
You are given a list of books, some of which are duplicates. Write a program to:
- Remove duplicate books.
- Display the remaining unique books sorted by title.

**Data Example:**
```python
books_list = [
    'The Great Gatsby', 'Moby Dick', 'War and Peace', 
    'Moby Dick', 'The Great Gatsby', 'To Kill a Mockingbird'
]
```

---

### Exercise 15: **Stock Price Analysis**
You are given daily stock prices for a company over a month. Write a program that:
- Identifies the days when the stock price increased or decreased compared to the previous day.
- Calculates the longest streak of increasing prices.

**Data Example:**
```python
stock_prices = [100, 102, 101, 105, 107, 103, 108, 110, 112, 109, 108, 113]
```

---

These exercises will challenge your understanding of lists, tuples, and sets in various contexts. Let me know when you'd like to see the solutions!